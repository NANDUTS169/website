<%- include("../../views/partials/admin/header") %>

<head>
  <style>
    .thumbnails-container {
      display: flex;
      overflow-x: auto;
    }

    .thumbnail {
      margin-right: 10px;
    }

    .input-upload {
      position: relative;
    }

    .error-message {
      color: red;
      display: none;
    }
  </style>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>

<section class="content-main">
  <div class="row">
    <div class="col-9">
      <div class="content-header">
        <h2 class="content-title">Edit Product</h2>
      </div>
    </div>

    <div class="col-lg-6">
      <div class="card mb-4">
        <div class="card-body">
          <form id="productForm" method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data">
            <!-- Product Name -->
            <div class="mb-4">
              <label class="form-label">Product Name</label>
              <input type="text" name="productName" value="<%=product.productName%>" class="form-control border">
              <div id="productName-error" class="error-message"></div>
            </div>

            <!-- Brand -->
            <div class="col-lg-4 mb-4">
              <label class="form-label">Brand</label>
              <select class="form-select border" name="brand">
                <% brand.forEach(b => { %>
                  <option value="<%= b.brandName %>" <%= b.brandName === product.brand ? "selected" : "" %>>
                    <%= b.brandName %>
                  </option>
                <% }) %>
              </select>
              <div id="brand-error" class="error-message"></div>
            </div>

            <!-- Description -->
            <div class="mb-4">
              <label class="form-label">Full description</label>
              <input name="description" id="descriptionid" value="<%=product.description%>" class="form-control border">
              <div id="description-error" class="error-message"></div>
            </div>

            <!-- Prices and Quantity -->
            <div class="row">
              <div class="col-lg-4 mb-4">
                <label class="form-label">Regular price</label>
                <input name="regularPrice" type="text" value="<%=product.regularPrice%>" class="form-control border">
                <div id="regularPrice-error" class="error-message"></div>
              </div>
              <div class="col-lg-4 mb-4">
                <label class="form-label">Sale price</label>
                <input name="salePrice" type="text" value="<%=product.salePrice%>" class="form-control border">
                <div id="salePrice-error" class="error-message"></div>
              </div>
              <div class="col-lg-4 mb-4">
                <label class="form-label">Quantity</label>
                <input name="quantity" type="text" value="<%=product.quantity%>" class="form-control border">
                <div id="quantity-error" class="error-message"></div>
              </div>
            </div>

            <!-- Color -->
            <div class="row">
              <div class="col-lg-4 mb-4">
                <label class="form-label">Color</label>
                <input name="color" type="text" value="<%=product.color%>" class="form-control border">
                <div id="color-error" class="error-message"></div>
              </div>
            </div>

            <!-- Category -->
            <div class="card mb-4">
              <div class="card-body">
                <div class="row gx-2">
                  <div class="col-sm-6 mb-3">
                    <label class="form-label">Category</label>
                    <select class="form-select border" name="category">
                      <% cat.forEach(c => { %>
                        <option value="<%= c.name %>" <%= c._id.toString() === product.category.toString() ? "selected" : "" %>>
                          <%= c.name %>
                        </option>
                      <% }) %>
                    </select>
                    <div id="category-error" class="error-message"></div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Existing Images -->
            <div class="card mb-2">
              <div class="card-header">
                <h4>Existing Images</h4>
              </div>
              <% product.productImage.forEach(img => { %>
                <div class="col-md-12">
                  <div class="mb-4 d-flex align-items-center">
                    <img class="rounded" style="width: 50px; height: 60px;" src="/uploads/product-images/<%= img %>" alt="">
                    <i onclick="deleteSingleImage('<%=img%>','<%=product._id%>')" style="margin-left: 15px; cursor: pointer;" class="btn btn-secondary">Delete Image</i>
                  </div>
                </div>
              <% }) %>

              <!-- Image Upload & Cropper -->
              <% for(let i=1;i<=4;i++){ %>
                <div class="card-body align-items-center mb-3">
                  <img src="" alt="" id="imgView<%=i%>">
                  <input class="form-control" type="file" name="images" id="input<%=i%>" accept="image/png, image/jpeg, image/jpg">
                  <div id="images-error" class="error-message"></div>
                </div>
                <div id="cropperContainer<%=i%>" class="image-cropper d-flex align-items-center mb-3" style="display:none; width: 300px; height: 200px;">
                  <img src="" id="croppedImg<%=i%>" alt="">
                  <button type="button" id="saveButton<%=i%>" class="btn-sm btn-primary">Save</button>
                </div>
              <% } %>
            </div>

            <!-- Submit Button -->
            <div>
              <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="button" onclick="validateAndSubmit()">Update</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>

const selectedImages = [];
let croppers = {};

document.addEventListener('DOMContentLoaded', () => {
  for (let i = 1; i <= 4; i++) {
    const inputElement = document.getElementById(`input${i}`);
    inputElement.addEventListener('change', function (event) {
      viewImage(event, i);
    });
  }

  document.getElementById('updatebtn').addEventListener('click', validateAndSubmit);
});

function validateAndSubmit() {
  if (validateForm()) {
    document.getElementById('productForm').submit();
  }
}

function viewImage(event, index) {
  const input = event.target;
  if (!input.files || !input.files[0]) return;

  const reader = new FileReader();
  reader.onload = function () {
    const dataURL = reader.result;
    const image = document.getElementById(`imgView${index}`);
    image.src = dataURL;

    if (croppers[index]) {
      croppers[index].destroy();
    }

    croppers[index] = new Cropper(image, {
      aspectRatio: 1,
      viewMode: 1,
      guides: true,
      background: false,
      autoCropArea: 0.8,
      zoomable: true
    });

    document.getElementById(`cropperContainer${index}`).style.display = 'block';

    const saveButton = document.getElementById(`saveButton${index}`);
    saveButton.addEventListener('click', function () {
      if (!croppers[index]) return;
      const croppedCanvas = croppers[index].getCroppedCanvas();
      document.getElementById(`croppedImg${index}`).src = croppedCanvas.toDataURL('image/jpeg', 0.9);

      const timestamp = new Date().getTime();
      const fileName = `cropped-img-${timestamp}-${index}.png`;

      croppedCanvas.toBlob(blob => {
        const input = document.getElementById(`input${index}`);
        const imgFile = new File([blob], fileName, { type: 'image/png' });
        const fileList = new DataTransfer();
        fileList.items.add(imgFile);
        input.files = fileList.files;
      }, 'image/png');
    });
  };
  reader.readAsDataURL(input.files[0]);
}

function validateForm() {
  clearErrorMessages();
  let isValid = true;

  const name = document.getElementsByName('productName')[0].value;
  const description = document.getElementById('descriptionid').value;
  const price = document.getElementsByName('regularPrice')[0].value;
  const saleprice = document.getElementsByName('salePrice')[0].value;
  const color = document.getElementsByName('color')[0].value;
  const quantity = document.getElementsByName('quantity')[0].value;
  const images = document.getElementById('input1');
  const hasExistingImages = document.querySelectorAll('img[src^="/uploads/product-images/"]').length > 0;

  if (name.trim() === "") {
    displayErrorMessage('productName-error', 'Please enter a product name.');
    isValid = false;
  }

  if (description.trim() === "") {
    displayErrorMessage('description-error', 'Please enter a product description.');
    isValid = false;
  }

  if (quantity.trim() === "" || isNaN(parseInt(quantity)) || parseInt(quantity) < 0) {
    displayErrorMessage('quantity-error', 'Please enter a valid quantity.');
    isValid = false;
  }

  if (price.trim() === "" || isNaN(parseFloat(price)) || parseFloat(price) < 0) {
    displayErrorMessage('regularPrice-error', 'Please enter a valid price.');
    isValid = false;
  }

  if (saleprice.trim() !== "" && (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) >= parseFloat(price))) {
    displayErrorMessage('salePrice-error', 'Sale price must be less than regular price.');
    isValid = false;
  }

  if (color.trim() === "") {
    displayErrorMessage('color-error', 'Please enter a color.');
    isValid = false;
  }

  if ((!images.files || images.files.length === 0) && !hasExistingImages) {
    displayErrorMessage("images-error", 'Please select at least one image.');
    isValid = false;
  }

  return isValid;
}

function displayErrorMessage(id, message) {
  const el = document.getElementById(id);
  if (el) {
    el.innerText = message;
    el.style.display = "block";
  }
}

function clearErrorMessages() {
  const errorElements = document.getElementsByClassName('error-message');
  Array.from(errorElements).forEach(el => {
    el.innerText = '';
    el.style.display = "none";
  });
}

function deleteSingleImage(imageName, productId) {
  $.ajax({
    url: "/admin/deleteImage",
    method: 'post',
    data: { imageNameToServer: imageName, productIdToServer: productId },
    success: (response) => {
      if (response.status === true) {
        window.location.reload();
      }
    }
  });
}
</script>

<%- include("../../views/partials/admin/footer") %>
